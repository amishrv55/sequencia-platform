"""include cascades

Revision ID: a2d8fbabebf2
Revises: c2dbfa7ab804
Create Date: 2025-04-26 21:15:50.431091

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a2d8fbabebf2'
down_revision: Union[str, None] = 'c2dbfa7ab804'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('article_keywords_keyword_id_fkey', 'article_keywords', type_='foreignkey')
    op.drop_constraint('article_keywords_article_id_fkey', 'article_keywords', type_='foreignkey')
    op.create_foreign_key(None, 'article_keywords', 'articles', ['article_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'article_keywords', 'keywords', ['keyword_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('audit_logs_user_id_fkey', 'audit_logs', type_='foreignkey')
    op.create_foreign_key(None, 'audit_logs', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('comments_user_id_fkey', 'comments', type_='foreignkey')
    op.drop_constraint('comments_question_id_fkey', 'comments', type_='foreignkey')
    op.create_foreign_key(None, 'comments', 'questions', ['question_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'comments', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('predictions_user_id_fkey', 'predictions', type_='foreignkey')
    op.drop_constraint('predictions_question_id_fkey', 'predictions', type_='foreignkey')
    op.create_foreign_key(None, 'predictions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'predictions', 'questions', ['question_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('profiles_user_id_fkey', 'profiles', type_='foreignkey')
    op.create_foreign_key(None, 'profiles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('question_keywords_question_id_fkey', 'question_keywords', type_='foreignkey')
    op.drop_constraint('question_keywords_keyword_id_fkey', 'question_keywords', type_='foreignkey')
    op.create_foreign_key(None, 'question_keywords', 'keywords', ['keyword_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'question_keywords', 'questions', ['question_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('questions_user_id_fkey', 'questions', type_='foreignkey')
    op.drop_constraint('questions_category_id_fkey', 'questions', type_='foreignkey')
    op.create_foreign_key(None, 'questions', 'categories', ['category_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'questions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('scores_question_id_fkey', 'scores', type_='foreignkey')
    op.drop_constraint('scores_prediction_id_fkey', 'scores', type_='foreignkey')
    op.drop_constraint('scores_user_id_fkey', 'scores', type_='foreignkey')
    op.create_foreign_key(None, 'scores', 'questions', ['question_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'scores', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'scores', 'predictions', ['prediction_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('user_badges_user_id_fkey', 'user_badges', type_='foreignkey')
    op.drop_constraint('user_badges_badge_id_fkey', 'user_badges', type_='foreignkey')
    op.create_foreign_key(None, 'user_badges', 'badges', ['badge_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_badges', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_badges', type_='foreignkey')
    op.drop_constraint(None, 'user_badges', type_='foreignkey')
    op.create_foreign_key('user_badges_badge_id_fkey', 'user_badges', 'badges', ['badge_id'], ['id'])
    op.create_foreign_key('user_badges_user_id_fkey', 'user_badges', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'scores', type_='foreignkey')
    op.drop_constraint(None, 'scores', type_='foreignkey')
    op.drop_constraint(None, 'scores', type_='foreignkey')
    op.create_foreign_key('scores_user_id_fkey', 'scores', 'users', ['user_id'], ['id'])
    op.create_foreign_key('scores_prediction_id_fkey', 'scores', 'predictions', ['prediction_id'], ['id'])
    op.create_foreign_key('scores_question_id_fkey', 'scores', 'questions', ['question_id'], ['id'])
    op.drop_constraint(None, 'questions', type_='foreignkey')
    op.drop_constraint(None, 'questions', type_='foreignkey')
    op.create_foreign_key('questions_category_id_fkey', 'questions', 'categories', ['category_id'], ['id'])
    op.create_foreign_key('questions_user_id_fkey', 'questions', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'question_keywords', type_='foreignkey')
    op.drop_constraint(None, 'question_keywords', type_='foreignkey')
    op.create_foreign_key('question_keywords_keyword_id_fkey', 'question_keywords', 'keywords', ['keyword_id'], ['id'])
    op.create_foreign_key('question_keywords_question_id_fkey', 'question_keywords', 'questions', ['question_id'], ['id'])
    op.drop_constraint(None, 'profiles', type_='foreignkey')
    op.create_foreign_key('profiles_user_id_fkey', 'profiles', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'predictions', type_='foreignkey')
    op.drop_constraint(None, 'predictions', type_='foreignkey')
    op.create_foreign_key('predictions_question_id_fkey', 'predictions', 'questions', ['question_id'], ['id'])
    op.create_foreign_key('predictions_user_id_fkey', 'predictions', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.create_foreign_key('comments_question_id_fkey', 'comments', 'questions', ['question_id'], ['id'])
    op.create_foreign_key('comments_user_id_fkey', 'comments', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'audit_logs', type_='foreignkey')
    op.create_foreign_key('audit_logs_user_id_fkey', 'audit_logs', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'article_keywords', type_='foreignkey')
    op.drop_constraint(None, 'article_keywords', type_='foreignkey')
    op.create_foreign_key('article_keywords_article_id_fkey', 'article_keywords', 'articles', ['article_id'], ['id'])
    op.create_foreign_key('article_keywords_keyword_id_fkey', 'article_keywords', 'keywords', ['keyword_id'], ['id'])
    # ### end Alembic commands ###
